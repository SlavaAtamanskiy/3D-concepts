var renderer,scene,camera,clock,position,status="";var world,hero;var worldSpeed=Math.PI/800;var heroSpeed=Math.PI/35;var heroAxisY=-115;var jumping;var gravity=0;var bounce=0.5;var pace=150;var paceCount=2;var leftLane=-(pace);var rightLane=pace;var middleLane=0;var currentLane;var symbolsInPath;var symbols;function startGame(){var c=document.getElementById("canvas");var d=window.innerWidth;var a=window.innerHeight;c.setAttribute("width",d);c.setAttribute("height",a);renderer=new THREE.WebGLRenderer({canvas:c,alpha:true});renderer.setClearColor(16775930,1);renderer.setPixelRatio=window.devicePixelRatio;renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;scene=new THREE.Scene();camera=new THREE.PerspectiveCamera(40,d/a,0.1,1000);camera.position.set(0,0,375);var b=new THREE.AmbientLight(16777215,0.5);var e=new THREE.PointLight(16777215,0.5);scene.add(b);scene.add(e);clock=new THREE.Clock();clock.start();position=new THREE.Spherical();symbolsInPath=[];symbols=[];addDevTools();addWorld();addHero();createSymbols();document.onkeydown=handleKeyDown}function loop(){world.rotation.x+=worldSpeed;hero.rotation.x-=heroSpeed;addHeroBouncing();hero.position.x=THREE.Math.lerp(hero.position.x,currentLane,2*clock.getDelta());renderer.render(scene,camera);requestAnimationFrame(function(){loop()})}function handleKeyDown(a){if(jumping){return}if(a.keyCode===32){bounce=5;jumping=true;return}if(a.keyCode===37&&currentLane!==-(pace*paceCount)){currentLane-=pace}else{if(a.keyCode===39&&currentLane!==pace*paceCount){currentLane+=pace}}}function createSymbols(){var f="A,B,C,D,E";var d=f.length;var b=f.split(",");var e=[];var c=0;var a=new THREE.FontLoader();a.load("lib/fonts.min.js",function(i){while(c<d){var h=b[Math.floor(Math.random()*d)];var g=e.find(function(j){return j===h});if(g===undefined){symbols.push(createSymbol(h,i));e.push(h);c++}}})}function createSymbol(c,b){var d=new THREE.MeshPhongMaterial({color:14540253});var e=new THREE.TextGeometry(c,{font:b,size:50,height:10,curveSegments:12,bevelThickness:1,bevelSize:1,bevelEnabled:true});var a=new THREE.Mesh(e,d);scene.add(a);e.computeBoundingBox();e.textWidth=e.boundingBox.max.x-e.boundingBox.min.x}function addHero(){var b=new THREE.DodecahedronGeometry(35,1);var a=new THREE.MeshStandardMaterial({color:15069938,shading:THREE.FlatShading});jumping=false;hero=new THREE.Mesh(b,a);hero.receiveShadow=true;hero.castShadow=true;scene.add(hero);hero.position.set(0,heroAxisY,-100);currentLane=middleLane;hero.position.x=currentLane}function addWorld(){var b=200;var g=200;var d=2000;var f=new THREE.SphereGeometry(d,b,g);var e=new THREE.MeshStandardMaterial({color:65280,shading:THREE.FlatShading,wireframe:false});var j=80;if(clock.running){clock.stop()}clock.start();var h=1;var a=0;for(var c=0;c<f.vertices.length;c++){a+=20*clock.getDelta()*h;if(j<Math.abs(a)){h=h*(-1)}f.vertices[c].x+=-10+Math.random()*20*a;f.vertices[c].y+=-10+Math.random()*20*a}world=new THREE.Mesh(f,e);world.rotation.z=90;world.position.set(0,-2000,-800);world.receiveShadow=true;world.castShadow=true;scene.add(world)}function addHeroBouncing(){if(jumping){if(status==="decreasing"){gravity-=0.06;hero.position.y-=(bounce-gravity);if(hero.position.y<heroAxisY){hero.position.y=heroAxisY;bounce=0.5;jumping=false;status=""}}else{if(status!=="decreasing"){gravity+=0.06;if(bounce-gravity<0){status="decreasing"}hero.position.y+=(bounce-gravity)}}return}hero.position.y+=bounce;var a=45;if(Math.abs(hero.position.y)<Math.abs(heroAxisY)-a){hero.position.y=heroAxisY}if(Math.abs(hero.position.y)<Math.abs(heroAxisY)-Math.floor(Math.random()*a)){hero.position.y=heroAxisY}}function addDevTools(){var a=new THREE.AxesHelper(500);scene.add(a)}window.onload=function(){startGame();loop()};